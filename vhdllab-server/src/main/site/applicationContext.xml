<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
    destroy-method="close">
    <property name="driverClassName" value="com.mysql.jdbc.Driver" />
    <property name="url" value="jdbc:mysql://localhost:3306/vhdllab2" />
    <property name="username" value="test" />
    <property name="password" value="a" />

    <property name="initialSize" value="2" />
    <property name="maxActive" value="20" />
    <property name="maxIdle" value="8" />
    <property name="maxWait" value="5000" />
    <property name="testOnBorrow" value="true" />
    <property name="testOnReturn" value="false" />
    <property name="validationQuery" value="SELECT 1" /> <!-- MySQL valid -->
    <property name="poolPreparedStatements" value="true" />
    <property name="maxOpenPreparedStatements" value="20" />
  </bean>

  <bean id="entityManagerFactory"
    class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="jpaVendorAdapter">
      <bean
        class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="MYSQL" />
        <property name="showSql" value="false" />
      </bean>
    </property>
    <property name="jpaProperties">
      <props>
        <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider
        </prop>
        <prop key="hibernate.cache.use_second_level_cache">true</prop>
        <prop key="hibernate.cache.use_query_cache">true</prop>
        <prop key="hibernate.hbm2ddl.auto">update</prop>
      </props>
    </property>
  </bean>

  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="entityManagerFactory" />
  </bean>

  <context:annotation-config />
  <!--  <context:spring-configured />-->
  <tx:annotation-driven transaction-manager="transactionManager" />
  <aop:aspectj-autoproxy />

  <!-- DAO classes -->
  <bean class="hr.fer.zemris.vhdllab.dao.impl.ProjectDaoImpl"
    autowire="autodetect" />

  <bean class="hr.fer.zemris.vhdllab.dao.impl.FileDaoImpl"
    autowire="autodetect" />

  <bean class="hr.fer.zemris.vhdllab.dao.impl.LibraryDaoImpl"
    autowire="autodetect" />

  <bean class="hr.fer.zemris.vhdllab.dao.impl.LibraryFileDaoImpl"
    autowire="autodetect" />

  <bean class="hr.fer.zemris.vhdllab.dao.impl.UserFileDaoImpl"
    autowire="autodetect" />

  <!-- Service classes -->
  <bean id="fileService" class="hr.fer.zemris.vhdllab.service.impl.FileServiceImpl" />
  <bean id="projectService" class="hr.fer.zemris.vhdllab.service.impl.ProjectServiceImpl" />
  <bean id="libraryFileService" class="hr.fer.zemris.vhdllab.service.impl.LibraryFileServiceImpl" />
  <bean id="userFileService" class="hr.fer.zemris.vhdllab.service.impl.UserFileServiceImpl" />
  <bean id="hierarchyExtractionService" class="hr.fer.zemris.vhdllab.service.impl.HierarchyExtractionService" />
  <bean id="circuitInterfaceExtractionService" class="hr.fer.zemris.vhdllab.service.filetype.CircuitInterfaceExtractionService" />
  <bean id="dependencyExtractionService" class="hr.fer.zemris.vhdllab.service.filetype.DependencyExtractionService" />
  <bean id="vhdlGenerationService" class="hr.fer.zemris.vhdllab.service.filetype.VhdlGenerationService" />

  <bean id="compiler" class="hr.fer.zemris.vhdllab.service.ghdl.GhdlCompiler" init-method="configure">
    <property name="properties">
      <props>
        <prop key="compiler.executable">/usr/bin/ghdl</prop>
        <prop key="compiler.parameters">-a</prop>
        <prop key="compiler.tmpDir">/home/lord/tmp/vhdllab/compilations</prop>
      </props>
    </property>
  </bean>
  <bean id="simulator" class="hr.fer.zemris.vhdllab.service.ghdl.GhdlSimulator" init-method="configure">
    <property name="properties">
      <props>
        <prop key="simulator.executable">/usr/bin/ghdl</prop>
        <prop key="simulator.parameters">--elab-run</prop>
        <prop key="simulator.tmpDir">/home/lord/tmp/vhdllab/simulations</prop>
        <prop key="compiler.parameters">-a</prop>
      </props>
    </property>
  </bean>
  
  
  
  
  <bean id="httpFileService"
        class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
    <property name="service">
      <ref bean="fileService"/>
    </property>
    <property name="serviceInterface">
      <value>hr.fer.zemris.vhdllab.service.FileService</value>
    </property>
  </bean>
  
  <bean id="httpProjectService"
        class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
    <property name="service">
      <ref bean="projectService"/>
    </property>
    <property name="serviceInterface">
      <value>hr.fer.zemris.vhdllab.service.ProjectService</value>
    </property>
  </bean>
  
  <bean id="httpLibraryFileService"
        class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
    <property name="service">
      <ref bean="libraryFileService"/>
    </property>
    <property name="serviceInterface">
      <value>hr.fer.zemris.vhdllab.service.LibraryFileService</value>
    </property>
  </bean>
  
  <bean id="httpUserFileService"
        class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
    <property name="service">
      <ref bean="userFileService"/>
    </property>
    <property name="serviceInterface">
      <value>hr.fer.zemris.vhdllab.service.UserFileService</value>
    </property>
  </bean>
  
  <bean id="httpHierarchyExtracionService"
        class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
    <property name="service">
      <ref bean="hierarchyExtractionService"/>
    </property>
    <property name="serviceInterface">
      <value>hr.fer.zemris.vhdllab.service.HierarchyExtractor</value>
    </property>
  </bean>
  
  <bean id="httpCircuitInterfaceExtractionService"
        class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
    <property name="service">
      <ref bean="circuitInterfaceExtractionService"/>
    </property>
    <property name="serviceInterface">
      <value>hr.fer.zemris.vhdllab.service.filetype.CircuitInterfaceExtractor</value>
    </property>
  </bean>
  
  <bean id="httpDependencyExtractionService"
        class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
    <property name="service">
      <ref bean="dependencyExtractionService"/>
    </property>
    <property name="serviceInterface">
      <value>hr.fer.zemris.vhdllab.service.filetype.DependencyExtractor</value>
    </property>
  </bean>
  
  <bean id="httpVhdlGenerationService"
        class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
    <property name="service">
      <ref bean="vhdlGenerationService"/>
    </property>
    <property name="serviceInterface">
      <value>hr.fer.zemris.vhdllab.service.filetype.VhdlGenerator</value>
    </property>
  </bean>
  
  <bean id="httpCompiler"
        class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
    <property name="service">
      <ref bean="compiler"/>
    </property>
    <property name="serviceInterface">
      <value>hr.fer.zemris.vhdllab.service.Compiler</value>
    </property>
  </bean>
  
  <bean id="httpSimulator"
        class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
    <property name="service">
      <ref bean="simulator"/>
    </property>
    <property name="serviceInterface">
      <value>hr.fer.zemris.vhdllab.service.Simulator</value>
    </property>
  </bean>
  
  <bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
    <property name="mappings">
      <props>
        <prop key="/file.service">httpFileService</prop>
        <prop key="/project.service">httpProjectService</prop>
        <prop key="/libraryfile.service">httpLibraryFileService</prop>
        <prop key="/userfile.service">httpUserFileService</prop>
        <prop key="/hierarchyextraction.service">httpHierarchyExtracionService</prop>
        <prop key="/circuitinterfaceextraction.service">httpCircuitInterfaceExtractionService</prop>
        <prop key="/dependencyextraction.service">httpDependencyExtractionService</prop>
        <prop key="/vhdlgeneration.service">httpVhdlGenerationService</prop>
        <prop key="/compiler.service">httpCompiler</prop>
        <prop key="/simulator.service">httpSimulator</prop>
      </props>
    </property>
  </bean>
  
  
  
  
  
  
  <bean id="sourceDependencyExtractor" class="hr.fer.zemris.vhdllab.service.filetype.source.SourceDependencyExtractor" />
  <bean id="sourceCircuitInterfaceExtractor" class="hr.fer.zemris.vhdllab.service.filetype.source.SourceCircuitInterfaceExtractor" />
  <bean id="sourceVhdlGenerator" class="hr.fer.zemris.vhdllab.service.filetype.source.SourceVhdlGenerator" />
  
  <bean id="schemaDependencyExtractor" class="hr.fer.zemris.vhdllab.service.filetype.schema.SchemaDependencyExtractor" />
  <bean id="schemaCircuitInterfaceExtractor" class="hr.fer.zemris.vhdllab.service.filetype.schema.SchemaCircuitInterfaceExtractor" />
  <bean id="schemaVhdlGenerator" class="hr.fer.zemris.vhdllab.service.filetype.schema.SchemaVhdlGenerator" />
  
  <bean id="automatonDependencyExtractor" class="hr.fer.zemris.vhdllab.service.filetype.automaton.AutomatonDependencyExtractor" />
  <bean id="automatonCircuitInterfaceExtractor" class="hr.fer.zemris.vhdllab.service.filetype.automaton.AutomatonCircuitInterfaceExtractor" />
  <bean id="automatonVhdlGenerator" class="hr.fer.zemris.vhdllab.service.filetype.automaton.AutomatonVhdlGenerator" />
  
  <bean id="testbenchDependencyExtractor" class="hr.fer.zemris.vhdllab.service.filetype.testbench.TestbenchDependencyExtractor" />
  <bean id="testbenchCircuitInterfaceExtractor" class="hr.fer.zemris.vhdllab.service.filetype.testbench.TestbenchCircuitInterfaceExtractor" />
  <bean id="testbenchVhdlGenerator" class="hr.fer.zemris.vhdllab.service.filetype.testbench.TestbenchVhdlGenerator" />
  
  <bean id="simulationDependencyExtractor" class="hr.fer.zemris.vhdllab.service.filetype.simulation.SimulationDependencyExtractor" />
  <bean id="simulationCircuitInterfaceExtractor" class="hr.fer.zemris.vhdllab.service.filetype.simulation.SimulationCircuitInterfaceExtractor" />
  <bean id="simulationVhdlGenerator" class="hr.fer.zemris.vhdllab.service.filetype.simulation.SimulationVhdlGenerator" />
  
  <bean id="predefinedDependencyExtractor" class="hr.fer.zemris.vhdllab.service.filetype.predefined.PredefinedDependencyExtractor" />
  <bean id="predefinedCircuitInterfaceExtractor" class="hr.fer.zemris.vhdllab.service.filetype.predefined.PredefinedCircuitInterfaceExtractor" />
  <bean id="predefinedVhdlGenerator" class="hr.fer.zemris.vhdllab.service.filetype.predefined.PredefinedVhdlGenerator" />
  
 
  
  <bean id="clientLogsLibraryInitializerTarget" class="hr.fer.zemris.vhdllab.service.init.clientlogs.ClientLogsLibraryInitializer"/>
  <bean id="predefinedLibraryInitializerTarget" class="hr.fer.zemris.vhdllab.service.init.predefined.PredefinedLibraryInitializer">
    <property name="fileNames">
      <set>
        <value>VL_AND</value>
        <value>VL_NAND</value>
        <value>VL_NOR</value>
        <value>VL_NOT</value>
        <value>VL_OR</value>
        <value>VL_XNOR</value>
        <value>VL_XOR</value>
      </set>
    </property>
  </bean>
  <bean id="preferencesLibraryInitializerTarget" class="hr.fer.zemris.vhdllab.service.init.preferences.PreferencesLibraryInitializer">
    <property name="fileNames">
      <set>
        <value>common.localization.language</value>
        <value>system.always.save.resources</value>
        <value>system.component.placement.for.view.project.explorer</value>
        <value>system.default.editor.placement</value>
        <value>system.default.view.placement</value>
        <value>system.opened.editors</value>
        <value>system.opened.views</value>
        <value>system.project.explorer.width</value>
        <value>system.sidebar.width</value>
        <value>system.tooltip.duration</value>
        <value>system.view.height</value>
      </set>
    </property>
  </bean>
  
  <bean id="jpaInterceptor" class="org.springframework.orm.jpa.JpaInterceptor">
    <property name="entityManagerFactory" ref="entityManagerFactory" />
  </bean>
  
  <bean id="libraryInitializerProxyBase" class="org.springframework.aop.framework.ProxyFactoryBean"
    abstract="true">
    <property name="proxyInterfaces" value="hr.fer.zemris.vhdllab.service.init.LibraryInitializer" />
    <property name="interceptorNames" value="jpaInterceptor" />
  </bean>
  
  <bean id="clientLogsLibraryInitializer" parent="libraryInitializerProxyBase">
    <property name="target" ref="clientLogsLibraryInitializerTarget" />
  </bean>

  <bean id="predefinedLibraryInitializer" parent="libraryInitializerProxyBase">
    <property name="target" ref="predefinedLibraryInitializerTarget" />
  </bean>

  <bean id="preferencesLibraryInitializer" parent="libraryInitializerProxyBase">
    <property name="target" ref="preferencesLibraryInitializerTarget" />
  </bean>

  <bean id="groupLibraryInitializer" class="hr.fer.zemris.vhdllab.service.init.GroupLibraryInitializer">
    <property name="initializers">
      <set>
        <ref bean="clientLogsLibraryInitializer"/>
        <ref bean="predefinedLibraryInitializer"/>
        <ref bean="preferencesLibraryInitializer"/>
      </set>
    </property>
  </bean>


















  <!-- also add hibernate statistics = true to jpa properties -->
  <!--
    <bean id="hibernateStats"
    class="org.hibernate.jmx.StatisticsService">
  -->
  <!--       <property name="sessionFactory">-->
  <!--           <ref bean="sessionFactory"/>-->
  <!--       </property>-->
  <!--</bean>-->
  <!--
    <bean id="exporter"
    class="org.springframework.jmx.export.MBeanExporter">
  -->
  <!--       <property name="beans">-->
  <!--           <map>-->
  <!--           <entry key="bean:name=hibernateStatsMBean">-->
  <!--                   <ref bean="hibernateStats"></ref>-->
  <!--           </entry>-->
  <!--           </map>-->
  <!--       </property>-->
  <!--       <property name="assembler">-->
  <!--
    <bean
    class="org.springframework.jmx.export.assembler.MethodNameBasedMBeanInfoAssembler">
  -->
  <!--               <property name="methodMappings">-->
  <!--                   <props>-->
  <!--                       <prop key="bean:name=hibernateStatsMBean">-->
  <!--                   </prop>-->
  <!--                   </props>-->
  <!--               </property>-->
  <!--           </bean>-->
  <!--       </property>-->
  <!--  only in 1.2.6-->
  <!--  <property name="registrationBehavior">-->
  <!--    <value>2</value>-->
  <!--  </property>-->
  <!--</bean>-->


</beans>