#********************************* MENUS *************************************#
###############################################################################
### - menus can NOT have accelerators but CAN have mnemonics				###
### - mnemonics must only be one letter of english alphabet	or a one digit	###
###		number (unless stated otherwise)									###
### - mnemonics are case insensitive										###
### - to compose a key for mnemonic use key for menu and add '.mnemonic'	###
###		suffix to it														###
### NOTE: if you fail to write a correct mnemonic it will be ignored		###
###############################################################################
menu.file = File
menu.file.mnemonic = F
menu.edit = Edit
menu.edit.mnemonic = E
menu.view = View
menu.view.mnemonic = V
menu.tools = Tools
menu.tools.mnemonic = T
menu.help = Help
menu.help.mnemonic = H
###############################################################################

#****************************** MENU ITEMS ***********************************#
###############################################################################
### - menu items can have accelerators and mnemonics						###
### - mnemonics must only be one letter of english alphabet	or a one digit	### 
###		number (unless stated otherwise)									###
### - mnemonics are case insensitive										###
### - to compose a key for mnemonic use key for menu item and add			###
###		'.mnemonic' suffix to it											###
###																			###
### - accelerators are keywords that may contain one or more modifer and 	###
### 	 must contain one letter of english alphabet or a one digit number	###
### - modifiers and a letter are separated by addition (+)					###
### - accelerators are case insensitive										###
### - to compose a key for accelerator use key for menu item and add		###
###		'.accelerator' suffix to it											###
### - modifiers for accelerators are:										###
### 	- ctrl		(for control key; followed by either another modifier	###
###						or a letter)										###
### 	- alt		(for alt key; followed by either another modifier or a 	###
###						letter)												###
###		- shift		(for shift key; followed by either another modifier or 	###
###						a letter)											###
### 	- func		(for function key; followed by a number (range: [1-12])	###
###						that determines	which function key should be		###
###						pressed; for example:								###
###						'func + 5' is a function key F5						###
### NOTE: if you fail to write a correct mnemonic or accelerator it will be ###
### 	ignored																###
###############################################################################
menu.file.new = New
menu.file.new.vhdl.source = VHDL Source
menu.file.new.vhdl.source.accelerator = ctrl + n
menu.file.new.project = Project
menu.file.new.testbench = Testbench
menu.file.new.schema = Schema
menu.file.new.automat = Automat
menu.file.open = Open...
menu.file.open.mnemonic = O
menu.file.open.accelerator = ctrl + o
menu.file.save = Save
menu.file.save.mnemonic = S
menu.file.save.accelerator = ctrl + S
menu.file.save.all = Save All
menu.file.save.all.mnemonic = A
menu.file.save.all.accelerator = ctrl + shift + S
menu.file.close = Close
menu.file.close.mnemonic = C
menu.file.close.accelerator = ctrl + w
menu.file.close.other = Close Other
menu.file.close.all = Close All
menu.file.close.all.mnemonic = l
menu.file.close.all.accelerator = ctrl + shift + w
menu.file.exit = Exit
menu.file.exit.mnemonic = X
menu.file.exit.accelerator = ctrl + q
menu.tools.compile = Compile Last History
menu.tools.compile.mnemonic = C
menu.tools.compile.accelerator = alt + shift + c
menu.tools.simulate = Simulate Last History
menu.tools.simulate.mnemonic = S
menu.tools.simulate.accelerator = alt + shift + s
###############################################################################


#******************************** DIALOGS ************************************#
###############################################################################
### - dialogs can have one or more placeholders								###
### - placeholders must be replaced by other string by whoever uses this	###
### 	localization file													###
### - placeholder is represented as string '{n}' where n is a number; for	###
### 	example in string 'File {0} does not exist', '{0}' is treated as a  ###
###		placeholder and will be replaced most likely by file name			###
### - if string has at least one placeholder it must start with a number 0  ###
### - if string has multiple placeholders they must be written in a tandem  ###
###		and first one must start with a number 0							###
### NOTE: if you fail to write a correct placeholder(s) they will be 		###
###		treated as a normal string; for example:							###
###		- string 'File {1} does not exist' will not cause any replacement	###
###			because placeholder starts with a number 1, not 0 as required	###
### NOTE: placeholders are directly linked with whoever uses this			###
###			localization file, therefor if you create a placeholder in this	###
###			file you must replace it in a class that uses this file, if not ###
### 		then placeholder will be treated as a normal string				###
###############################################################################
dialog.button.yes = Yes
dialog.button.no = No
dialog.button.cancel = Cancel

dialog.option.save.single.resource.title = Save Resource
### placeholder will be replaced with a file name
dialog.option.save.single.resource.message = '{0}' has been modified. Save changes?
dialog.option.save.multiple.resource.title = Save Resources
### placeholder will be replaced with a list of file names
dialog.option.save.multiple.resource.message = Following resources have been modified\n\n{0}\n\nSave changes?

dialog.option.save.resources.for.compilation.title = Save and Compile
dialog.option.save.resources.for.compilation.message = All resources have to be saved in order\nfor compilation to proceed.\nSave changes?
dialog.option.save.resources.for.simulation.title = Save and Simulate
dialog.option.save.resources.for.simulation.message = All resources have to be saved in order\nfor simulation to proceed.\nSave changes?
###############################################################################


#******************************* STATUSBAR ***********************************#
###############################################################################
### - statusbar can have one or more placeholders							###
### - placeholders must be replaced by other string by whoever uses this	###
### 	localization file													###
### - placeholder is represented as string '{n}' where n is a number; for	###
### 	example in string 'File {0} does not exist', '{0}' is treated as a  ###
###		placeholder and will be replaced most likely by file name			###
### - if string has at least one placeholder it must start with a number 0  ###
### - if string has multiple placeholders they must be written in a tandem  ###
###		and first one must start with a number 0							###
### NOTE: if you fail to write a correct placeholder(s) they will be 		###
###		treated as a normal string; for example:							###
###		- string 'File {1} does not exist' will not cause any replacement	###
###			because placeholder starts with a number 1, not 0 as required	###
### NOTE: placeholders are directly linked with whoever uses this			###
###			localization file, therefor if you create a placeholder in this	###
###			file you must replace it in a class that uses this file, if not ###
### 		then placeholder will be treated as a normal string				###
###############################################################################
statusbar.load.complete = Loading Completed.
statusbar.language.setting.not.found = Could not load user settings, using default language (en).
statusbar.cant.save.file = '{0}' could not be saved!
statusbar.cant.save.project = '{0}' could not be saved!
statusbar.cant.create.file = Unable to create a new file instance!
statusbar.cant.create.project = Unable to create a new project!
statusbar.cant.load.file.content = Unable to open editor for '{0}'.
statusbar.cant.load.workspace = Unable to load workspace!
statusbar.cant.compile = Unable to run compilation!
statusbar.cant.simulate = Unable to run simulation!
###############################################################################