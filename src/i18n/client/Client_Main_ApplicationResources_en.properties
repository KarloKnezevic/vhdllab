#********************************* MENUS *************************************#
###############################################################################
### - menus can NOT have accelerators but CAN have mnemonics and tooltips	###
### - mnemonics must only be one letter of english alphabet	or a one digit	###
###		number (unless stated otherwise)									###
### - mnemonics are case insensitive										###
### - to compose a key for mnemonic use key for menu and add '.mnemonic'	###
###		suffix to it														###
###																			###
### - tooltips may contain any characters									###
### - to compose a key for tooltip use key for menu and add '.tooltip'		###
###		suffix to it														###
### NOTE: if you fail to write a correct mnemonic it will be ignored		###
###############################################################################
menu.file = File
menu.file.mnemonic = F
menu.edit = Edit
menu.edit.mnemonic = E
menu.view = View
menu.view.mnemonic = V
menu.tools = Tools
menu.tools.mnemonic = T
menu.help = Help
menu.help.mnemonic = H
###############################################################################

#****************************** MENU ITEMS ***********************************#
###############################################################################
### - menu items can have accelerators, mnemonics and tooltips				###
### - mnemonics must only be one letter of english alphabet	or a one digit	### 
###		number (unless stated otherwise)									###
### - mnemonics are case insensitive										###
### - to compose a key for mnemonic use key for menu item and add			###
###		'.mnemonic' suffix to it											###
###																			###
### - tooltips may contain any characters									###
### - to compose a key for tooltip use key for menu and add '.tooltip'		###
###		suffix to it														###
###																			###
### - accelerators are keywords that may contain one or more modifier and 	###
### 	 must contain one letter of english alphabet or a one digit number	###
### - modifiers and a letter are separated by addition (+)					###
### - accelerators are case insensitive										###
### - to compose a key for accelerator use key for menu item and add		###
###		'.accelerator' suffix to it											###
### - modifiers for accelerators are:										###
### 	- ctrl		(for control key; followed by either another modifier	###
###						or a letter)										###
### 	- alt		(for alt key; followed by either another modifier or a 	###
###						letter)												###
###		- shift		(for shift key; followed by either another modifier or 	###
###						a letter)											###
### 	- func		(for function key; followed by a number (range: [1-12])	###
###						that determines	which function key should be		###
###						pressed; for example:								###
###						'func + 5' is a function key F5						###
### NOTE: if you fail to write a correct mnemonic or accelerator it will be ###
### 	ignored																###
###############################################################################
menu.file.new = New
menu.file.new.vhdl.source = VHDL Source
menu.file.new.vhdl.source.accelerator = ctrl + n
menu.file.new.project = Project
menu.file.new.testbench = Testbench
menu.file.new.schema = Schema
menu.file.new.automat = Automat
menu.file.open = Open...
menu.file.open.mnemonic = O
menu.file.open.accelerator = ctrl + o
menu.file.save = Save
menu.file.save.mnemonic = S
menu.file.save.accelerator = ctrl + S
menu.file.save.all = Save All
menu.file.save.all.mnemonic = A
menu.file.save.all.accelerator = ctrl + shift + S
menu.file.close = Close
menu.file.close.mnemonic = C
menu.file.close.accelerator = ctrl + w
menu.file.close.other = Close Other
menu.file.close.all = Close All
menu.file.close.all.mnemonic = l
menu.file.close.all.accelerator = ctrl + shift + w
menu.file.exit = Exit
menu.file.exit.mnemonic = X
menu.file.exit.accelerator = ctrl + q
menu.view.maximize.active.window = Maximize Active Window
menu.view.maximize.active.window.mnemonic = M
menu.view.maximize.active.window.accelerator = ctrl + m
menu.view.show.view = Show View
menu.view.show.view.compilation.errors = Compilation Errors
menu.view.show.view.simulation.errors = Simulation Errors
menu.view.show.view.status.history = Status History
menu.view.project.explorer = Project Explorer
menu.tools.compile.with.dialog = Compile...
menu.tools.compile.with.dialog.mnemonic = C
menu.tools.compile.with.dialog.accelerator = alt + shift + c
menu.tools.compile.active = Compile Active
menu.tools.compile.history = Recompile Last
menu.tools.compile.history.accelerator = ctrl + shift + c
menu.tools.simulate.with.dialog = Simulate...
menu.tools.simulate.with.dialog.mnemonic = S
menu.tools.simulate.with.dialog.accelerator = alt + shift + x
menu.tools.simulate.active = Simulate Active
menu.tools.simulate.history = Resimulate Last
menu.tools.simulate.history.accelerator = ctrl + shift + x
menu.tools.view.vhdl.code = View VHDL Code
menu.tools.view.preferences = View Preferences
menu.tools.view.preferences.mnemonic = P
menu.tools.view.preferences.accelerator = ctrl + p
menu.help.about = About
###############################################################################


#******************************** DIALOGS ************************************#
###############################################################################
### - dialogs can have one or more placeholders								###
### - placeholders must be replaced by other string by whoever uses this	###
### 	localization file													###
### - placeholder is represented as string '{n}' where n is a number; for	###
### 	example in string 'File {0} does not exist', '{0}' is treated as a  ###
###		placeholder and will be replaced most likely by file name			###
### - if string has at least one placeholder it must start with a number 0  ###
### - if string has multiple placeholders they must be written in a tandem  ###
###		and first one must start with a number 0							###
### - in order to use html in youre text wrap it with <HTML> tag (and close	###
###		with </HTML> tag													###
###	- use html tag <P> instead of carrage return, line feed or break line	###
###		characters, other html tags are at youre disposal aswell			###
### NOTE: if you fail to write a correct placeholder(s) they will be 		###
###		treated as a normal string; for example:							###
###		- string 'File {1} does not exist' will not cause any replacement	###
###			because placeholder starts with a number 1, not 0 as required	###
### NOTE: placeholders are directly linked with whoever uses this			###
###			localization file, therefor if you create a placeholder in this	###
###			file you must replace it in a class that uses this file, if not ###
### 		then placeholder will be treated as a normal string				###
### NOTE: if you fail wo wrap youre text with <HTML> tag other html tags	###
### 		will be treated as regular text									###
###############################################################################
dialog.button.yes = Yes
dialog.button.no = No
dialog.button.ok = OK
dialog.button.cancel = Cancel
dialog.button.select.all = Select All
dialog.button.deselect.all = Deselect All

dialog.save.checkbox.always.save.resources = Always save resources
dialog.save.resources.title = Save Resources
dialog.save.resources.message = Select resources to save:
dialog.save.resources.for.compilation.title = Save and Compile
dialog.save.resources.for.compilation.message = <HTML>All resources have to be saved before compilation.<P>Select resources to save:</HTML>
dialog.save.resources.for.simulation.title = Save and Simulate
dialog.save.resources.for.simulation.message = <HTML>All resources have to be saved before simulation.<P>Select resources to save:</HTML>

dialog.save.simulation.title = Save Simulation
dialog.save.simulation.message = Enter simulation name:

dialog.create.new.project.title = Create project
dialog.create.new.project.message = Type a name of a project you want to create

dialog.run.change.current.project.button = change
dialog.run.current.project.label = '{0}' is currently displayed
dialog.run.active.project.label.no.active.project = No project project to display
dialog.run.current.project.title = Current project
dialog.run.compilation.list.title = Select file to compile
dialog.run.compilation.title = Run Compilation
dialog.run.simulation.list.title = Select file to simulate
dialog.run.simulation.title = Run Simulation
###############################################################################


#******************************* STATUSBAR ***********************************#
###############################################################################
### - statusbar can have one or more placeholders							###
### - placeholders must be replaced by other string by whoever uses this	###
### 	localization file													###
### - placeholder is represented as string '{n}' where n is a number; for	###
### 	example in string 'File {0} does not exist', '{0}' is treated as a  ###
###		placeholder and will be replaced most likely by file name			###
### - if string has at least one placeholder it must start with a number 0  ###
### - if string has multiple placeholders they must be written in a tandem  ###
###		and first one must start with a number 0							###
### NOTE: if you fail to write a correct placeholder(s) they will be 		###
###		treated as a normal string; for example:							###
###		- string 'File {1} does not exist' will not cause any replacement	###
###			because placeholder starts with a number 1, not 0 as required	###
### NOTE: placeholders are directly linked with whoever uses this			###
###			localization file, therefor if you create a placeholder in this	###
###			file you must replace it in a class that uses this file, if not ###
### 		then placeholder will be treated as a normal string				###
###############################################################################
statusbar.load.complete = Loading Completed
statusbar.language.setting.not.found = Could not load user settings, using default language (en)
statusbar.exists.file = File '{0}' already exists in '{1}'
statusbar.exists.project = Project '{0}' already exists
statusbar.file.saved = '{0}' has been saved
statusbar.file.saved.all = {0} resource(s) have been saved
statusbar.file.created = '{0}' has been created
statusbar.project.created = '{0}' has been created
statusbar.no.selected.project = Select a project from Project Explorer before creating a new file
statusbar.cant.load.file.type = Internal error!
statusbar.cant.save.file = Internal error! '{0}' could not be saved
statusbar.cant.save.project = Internal error! '{0}' could not be saved
statusbar.cant.create.file = Internal error! Unable to create new resource '{0}'
statusbar.cant.create.project = Internal error! Unable to create new project '{0}'
statusbar.cant.check.file.existence = Internal error! Unable to check existence of resource '{0}'
statusbar.cant.check.project.existence = Internal error! Unable to check existence of project '{0}'
statusbar.cant.load.file.content = Internal error! Unable to open editor for '{0}'
statusbar.cant.load.workspace = Internal error! Unable to load workspace
statusbar.cant.compile = Internal error! Unable to run compilation for resource '{0}' in project '{1}'
statusbar.not.compilable = Resource '{0}' in project '{1}' is not compilable
statusbar.cant.simulate = Internal error! Unable to run simulation for resource '{0}' in project '{1}'
statusbar.not.simulatable = Resource '{0}' in project '{1}' is not simulatable
statusbar.compiled = Resource '{0}' in project '{1}' has been compiled
statusbar.simulated = Resource '{0}' in project '{1}' has been simulated
statusbar.cant.open.view = Internal error! Unable to open view: '{0}'
statusbar.cant.view.vhdl.code = Unable to view vhdl code for resource '{0}'
statusbar.cant.view.vhdl.code.for.that.file = VHDL code could not be generated for resource '{0}'
statusbar.cant.view.preferences = Internal error! Unable to view preferences
###############################################################################


#**************************** COMPONENT TITLES *******************************#
###############################################################################
### - titles for components													###
### - every key has appended component type after string "title.for."		###
### - example for view type "status.history" key will look like:			###
###			- title.for.view.status.history									###
###############################################################################
title.for.view.compilation.errors = Compilation Result
title.for.view.simulation.errors = Simulation Result
title.for.view.status.history = Status History
###############################################################################