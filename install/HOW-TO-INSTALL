Following must be done in order to prepare project.

1) copy configuration.properties-sample to configuration.properties and edit
   it.

2) open mysql console and issue following statement:
   create database vhdllab;
   Then execute following ant task:
   ant hibernate

3) copy simulator.properties-sample to ../src/service/simulator.properties
   Then edit this file and fix paths. Currently, as simulator is choosen
   ghdl and a wrapper that knows how to run it. ghdl can be obtained from:
   http://ghdl.free.fr/

   Developers: do not add ../src/service/simulator.properties to svn
   repository! You shoud only customize it and leave it for yourself.

4) copy compiler.properties-sample to ../src/service/compiler.properties
   Then edit this file and fix paths. Currently, as compiler is choosen
   ghdl and a wrapper that knows how to run it. ghdl can be obtained from:
   http://ghdl.free.fr/

   Developers: do not add ../src/service/compiler.properties to svn
   repository! You shoud only customize it and leave it for yourself.

5) copy predefinedFiles.properties-sample to
   ../src/service/predefinedFiles.properties. Then edit this file and fix
   path. 

   Developers: do not add ../src/service/predefinedFiles.properties to svn
   repository! You shoud only customize it and leave it for yourself.

6) copy applicationExceptions.properties-sample to
   ../src/service/applicationExceptions.properties. Then edit this file and fix
   path. 

   Developers: do not add ../src/service/applicationExceptions.properties to svn
   repository! You shoud only customize it and leave it for yourself.

7) vhdllab needs for tomcat to be enabled with ssl support. This is what you have to do:
		- open a console and issue following statements (note that the first statement
		will ask you for a keystore password. Use "changeit"! It will ask you for more
		information but those can be anything you want):
			* statements for linux users:
				$JAVA_HOME/bin/keytool -genkey -alias tomcat -keypass changeit -keyalg RSA
				$JAVA_HOME/bin/keytool -export -alias tomcat -keypass changeit -file server.crt
				sudo $JAVA_HOME/bin/keytool -import -file server.crt -keypass changeit -keystore $JAVA_HOME/jre/lib/security/cacerts
			* statements for windows users:
				%JAVA_HOME%\bin\keytool -genkey -alias tomcat -keypass changeit -keyalg RSA
				%JAVA_HOME%\bin\keytool -export -alias tomcat -keypass changeit -file server.crt
				%JAVA_HOME%\bin\keytool -import -file server.crt -keypass changeit -keystore %JAVA_HOME%\jre\lib\security\cacerts
		- after that you need to enable ssl support in tomcat. Open
		CATALINA_HOME/conf/server.xml file and search for a line that contains this
		"Define a SSL HTTP/1.1 Connector on port 8443" and uncomment following xml tag
		"<Connector port="8443" protocol="HTTP/1.1" ........"
		
	Now ssl support should be configured in tomcat. Try to open this page to see if ssl
	is working correctly "https://localhost:8443/".
	
8) you need to define some users for tomcat. You can do it easily in
	CATALINA_HOME/conf/tomcat-users.xml file. Just add following lines in the file:
		<role rolename="student"/>
		<user username="test" password="a" roles="student"/>

9) start tomcat using following ant task:
   ant run-tomcat

10) developer version of application can be accessed on (a java web start application):
   http://localhost:8080/vhdllab/launch.jnlp
   or by invoking "app-startup.sh" or "app-startup.bat" (depending on OS) script provided in ../local directory.

Debugging application inside java web start:
--------------------------------------------
Simply invoke app-startup.sh or app-startup.bat (depending on OS) script provided in ../local directory
- if an application needs to be suspended until someone connects to it simply provide 'y' argument like this:
	./app-startup.sh y
- note that a port used to debug an application is 5555 (most likely, check actual script to be sure)

Debugging applets (depreciated, no longer in use since vhdllab uses jnlp instead of browsers):
------------------
Configure JVM with option: -Xdebug -Xrunjdwp:transport=dt_socket,address=5555,server=y,suspend=n