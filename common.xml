<?xml version='1.0' encoding='UTF-8'?>
<project>
	<!-- MUST FOLLOW:
	This build file is used only by vhdllab subprojects and should NOT be
	used by, for example, a build.xml file in this directory! This is
	because of special references to a directory where this file is
	located (a container directory for all subprojects). For example,
	check libs.dir and local.dir properties in this file.
	-->
	
	<!-- USAGE NOTE (for build.xml files importing this file):
	This build file requires 2 classpath references, 3 special properties
	and 1 special fileset reference to be set before invoking any target.

		Classpath reference (junit reference is not needed by any of them):
			compile.classpath - used for compiling a code
			runtime.classpath - used for running tests

		Special properties:
			dependencies - a set of project names separated by a comma that
					form a dependencies of this project; if project has no
					dependencies then this property must not be set!
			debug - a flag indicating if code should be compiled with debug
					information
			runtime.log4j.dir - a directory containing log4j.properties file
					used for logging
		
		Special fileset:
			package.addon - a fileset that will be included in project jar
					when preforming 'package' target; this fileset must be
					set! If a project doesn't have anything else to add then
					create an empty fileset. Example:
					'<fileset id="package.addon" dir="." excludes="**/*"/>'
	-->
	
	<property name="relative.path" value=".." />
	<import file="build-properties.xml" />

	<path id="junit.classpath">
		<fileset file="${libs.dir}/test/junit-4.4.jar" />
	</path>
	
	<macrodef name="resolveDependencies">
		<attribute name="target"/>
		<attribute name="deps"/>
		<sequential>
			<subant inheritall="false" target="@{target}">
				<property name="prepair.local.done" value="true" />
				<dirset dir=".." includes="@{deps}" />
			</subant>
		</sequential>
	</macrodef>


	<!-- ======= TARGET DEFINITIONS ======================================= -->

	<target name="once" description="Creates eclipse files out of samples">
		<copy file=".classpath-sample" tofile=".classpath" overwrite="true" verbose="true" />
		<copy file=".project-sample" tofile=".project" overwrite="true" verbose="true" />
	</target>

	<target name="init">
		<available file="${configuration.properties}" property="configuration.properties.present" />
		<fail unless="configuration.properties.present">
      		${configuration.properties} file is not present. You have a sample ${configuration.properties}-sample. Please copy this file under correct name and customize it.
    	</fail>

		<tstamp />

		<!-- ant call so that that task (prepair-local) is done only once -->
		<ant antfile="../build.xml" target="prepair-local" inheritrefs="false" inheritall="false" />

		<!-- common build directories -->
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.main.dir}" />
		<mkdir dir="${build.tests.dir}" />
		<mkdir dir="${jlibs.dir}" />
		<mkdir dir="${jlibs.tests.dir}" />
		<mkdir dir="${javadoc.dir}" />
		<mkdir dir="${reports.tests.html.dir}" />
	</target>

	<target name="clean" description="Deletes all build directories">
		<delete quiet="true" includeEmptyDirs="true">
			<fileset dir="${build.dir}" />
			<fileset dir="${jlibs.dir}" />
			<fileset dir="${javadoc.dir}" />
			<fileset dir="${reports.dir}" />
		</delete>
	</target>
	
	<target name="eclipse" depends="init" description="Copies all necessary configuration files to eclipse source folders">
		<copy todir="${src.main.dir}">
		    <fileset dir="${runtime.log4j.dir}" includes="log4j.properties"/>
			<fileset refid="package.addon" />
		</copy>
	</target>

	<target name="resolve-dependencies" if="dependencies">
		<resolveDependencies target="package" deps="${dependencies}"/>
	</target>
	
	<target name="compile" depends="init,resolve-dependencies" description="Compiles all source code">
		<javac destdir="${build.main.dir}" includes="**/*.java"
			includeAntRuntime="false" debug="${debug}"
			debuglevel="${debug.level}" encoding="UTF-8">
			<src path="${src.main.dir}" />
			<classpath>
				<path refid="compile.classpath" />
			</classpath>
		</javac>
	</target>
	
	<target name="package" depends="compile" description="Creates jar files">
		<jar destfile="${project.jar}" index="false" duplicate="fail">
			<fileset dir="${build.main.dir}" includes="**/*.class" />
			<fileset dir="${src.main.dir}" excludes="**/*.java,**/*svn/**,**/*svn" />
			<fileset refid="package.addon" />
		</jar>
	</target>

	<target name="compile-tests" depends="compile" description="Compiles all tests">
		<!-- dependencies are resolved in compile target! -->
		<javac destdir="${build.tests.dir}" includes="**/*.java"
			includeAntRuntime="false" debug="true"
			debuglevel="lines,vars,source" encoding="UTF-8">
			<src path="${src.tests.dir}" />
			<classpath>
				<path refid="compile.classpath" />
				<path refid="junit.classpath" />
				<pathelement location="${build.main.dir}"/>
			</classpath>
		</javac>
	</target>
	
	<target name="package-tests" depends="compile-tests" description="Creates test jar files">
		<jar destfile="${project.tests.jar}" index="false">
			<fileset dir="${build.tests.dir}" includes="**/*.class" />
		</jar>
	</target>
	
	<target name="run-tests" depends="package,package-tests" description="Starts all tests">
		<junit fork="no" printsummary="no" haltonfailure="no" haltonerror="no">
			<classpath>
				<path refid="runtime.classpath" />
				<path refid="junit.classpath" />
				<pathelement location="${project.jar}" />
				<pathelement location="${project.tests.jar}" />
				<pathelement location="${runtime.log4j.dir}/log4j.properties"/>
			</classpath>

			<formatter type="xml" />

			<batchtest fork="no" todir="${reports.tests.dir}">
				<fileset dir="${build.tests.dir}">
					<include name="**/*Test*"/>
					<exclude name="**/*$$*"/> <!-- exclude nested classes -->
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="tests-report" depends="run-tests" description="Generates a tests report">
		<junitreport todir="${reports.tests.html.dir}">
			<fileset dir="${reports.tests.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${reports.tests.html.dir}" />
		</junitreport>
	</target>

	<target name="show-tests-report" depends="tests-report" description="Shows tests report in a browser">
		<taskdef name="openURI" classname="hr.fer.zemris.vhdllab.ant.OpenURITask"
			classpath="${vhdllab.misc.jar}" />
		<!-- NOTE: uri must be composed of basedir! -->
		<openURI uri="file:${basedir}/${reports.tests.html.dir}/index.html"/>
	</target>
	
	<target name="javadoc" depends="resolve-dependencies" description="Creates javadoc files">
		<javadoc destdir="${javadoc.dir}" author="true"
			classpathref="compile.classpath" nodeprecated="false"
			nodeprecatedlist="false" noindex="false" nonavbar="false"
			notree="false" packagenames="*" splitindex="true"
			use="true" version="true" encoding="UTF-8">
			<fileset dir="${src.main.dir}" includes="**/*.java"/>
			<link href="http://java.sun.com/javase/6/docs/api/" />
		</javadoc>
	</target>
	
	<!-- ======= META TARGETS ============================================= -->
	
	<target name="test" depends="run-tests,show-tests-report" description="Runs all tests and opens a tests report"/>
	
	<target name="all" depends="package,javadoc,test" description="Creates all jars, javadoc, runs all tests and opens a tests report" />

	<target name="rebuild" depends="clean,package" />

	<target name="rebuild-all" depends="clean,all" />

	<target name="rebuild-doc" depends="clean,javadoc" />
	
</project>